[
    {
        "id": "c7170e45.64fd4",
        "type": "tab",
        "label": "LSE01_minimal",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ff2fbbfa.18bf28",
        "type": "debug",
        "z": "c7170e45.64fd4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "7ac3a7f1.052d88",
        "type": "mqtt in",
        "z": "c7170e45.64fd4",
        "name": "hsrw_iotlab_lse01",
        "topic": "+/devices/+/up",
        "qos": "2",
        "datatype": "json",
        "broker": "3b9585de.78901a",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "ff2fbbfa.18bf28"
            ]
        ]
    },
    {
        "id": "29bff3f2.a78f1c",
        "type": "comment",
        "z": "c7170e45.64fd4",
        "name": "README",
        "info": "# LSE01 minimal\n\nMinimal flow to get data from the TTN application `hsrw_iotlab_lse01`.\n\nThe application collects data from Dragino LSE01 soil sensors (mainly moisture, temperature, electrical conductivity as well as battery voltage).\n\nThe messages coming from the LSE01 LoRa devices are decoded on TTN by means of a Javascript decoder.\n\nThe decoder on TTN looks like\n\n```\nfunction Decoder(bytes, port) {\n  // Decode an uplink message from a buffer\n  // (array) of bytes to an object of fields.\n  \n  var value=(bytes[0]<<8 | bytes[1]) & 0x3FFF;\n  var batV=value/1000;//Battery,units:V\n\n  value=bytes[2]<<8 | bytes[3];\n  if(bytes[2] & 0x80) \n    value |= 0xFFFF0000;\n  var temp_DS18B20=(value/10).toFixed(2);//DS18B20,temperature,units: °C\n  \n  value=bytes[4]<<8 | bytes[5];\n  var water_SOIL=(value/100).toFixed(2);//water_SOIL,Humidity,units:%\n  \n  value=bytes[6]<<8 | bytes[7];\n  var temp_SOIL;\n  if((value & 0x8000)>>15 === 0)\n    temp_SOIL=(value/100).toFixed(2);//temp_SOIL,temperature,units: °C\n  else if((value & 0x8000)>>15 === 1)\n    temp_SOIL=((value-0xFFFF)/100).toFixed(2);//temp_SOIL,temperature,units: °C\n   \n  value=bytes[8]<<8 | bytes[9];\n  var conduct_SOIL=(value);//conduct_SOIL,conductivity,units: uS/cm\n\n\n  return {\n    battery_voltage: {\n      value: batV,\n      unit: \"V\"\n    },\n    extra_temperature_sensor: {\n      value: temp_DS18B20,\n      unit: \"°C\",\n      comment: \"An extra DS18B20 connected to LSE01. Not connected by default.\"\n    },\n    soil_sensor: {\n      moisture: {\n        value: water_SOIL, \n        unit: \"%vol\"\n      },\n      temperature: {\n        value: temp_SOIL,\n        unit: \"°C\"\n      },\n      electrical_conductivity: {\n        value: conduct_SOIL,\n        unit: \"uS/cm\"\n      }\n    }\n  };\n}\n```\n",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "3b9585de.78901a",
        "type": "mqtt-broker",
        "z": "",
        "name": "hsrw_iotlab_lse01",
        "broker": "eu.thethings.network",
        "port": "8883",
        "tls": "70175d8f.fa6ca4",
        "clientid": "",
        "usetls": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "70175d8f.fa6ca4",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    }
]